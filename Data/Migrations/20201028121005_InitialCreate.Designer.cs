// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MeowingCfLoggerContext))]
    [Migration("20201028121005_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Models.CfHttpHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientAcceptEncoding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientTcpRtt")
                        .HasColumnType("int");

                    b.Property<string>("Colo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EdgeRequestKeepAliveStatus")
                        .HasColumnType("int");

                    b.Property<string>("HttpProtocol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestPriority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TlsCipher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TlsClientAuthId")
                        .HasColumnType("int");

                    b.Property<int>("TlsExportedAuthenticatorId")
                        .HasColumnType("int");

                    b.Property<string>("TlsVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TlsClientAuthId");

                    b.HasIndex("TlsExportedAuthenticatorId");

                    b.ToTable("CfHttpHeaders");
                });

            modelBuilder.Entity("Data.Models.HttpHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Header")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HttpRequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HttpRequestId1")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HttpRequestId1");

                    b.ToTable("HttpHeaders");
                });

            modelBuilder.Entity("Data.Models.HttpRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BodyUsed")
                        .HasColumnType("bit");

                    b.Property<int?>("CfId")
                        .HasColumnType("int");

                    b.Property<int>("ContentLength")
                        .HasColumnType("int");

                    b.Property<string>("Fetchers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Redirect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CfId");

                    b.ToTable("HttpRequests");
                });

            modelBuilder.Entity("Data.Models.TlsClientAuth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CertFingerprintSha1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertIssuerDn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertIssuerDnLegacy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertIssuerDnrfc2253")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertNotAfter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertNotBefore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertPresented")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertSerial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertSubjectDn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertSubjectDnLegacy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertSubjectDnrfc2253")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertVerified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TlsClientAuths");
                });

            modelBuilder.Entity("Data.Models.TlsExportedAuthenticator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientFinished")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientHandshake")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServerFinished")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServerHandshake")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TlsExportedAuthenticators");
                });

            modelBuilder.Entity("Data.Models.CfHttpHeader", b =>
                {
                    b.HasOne("Data.Models.TlsClientAuth", "TlsClientAuth")
                        .WithMany()
                        .HasForeignKey("TlsClientAuthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.TlsExportedAuthenticator", "TlsExportedAuthenticator")
                        .WithMany()
                        .HasForeignKey("TlsExportedAuthenticatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Models.HttpHeader", b =>
                {
                    b.HasOne("Data.Models.HttpRequest", "HttpRequest")
                        .WithMany("Headers")
                        .HasForeignKey("HttpRequestId1");
                });

            modelBuilder.Entity("Data.Models.HttpRequest", b =>
                {
                    b.HasOne("Data.Models.CfHttpHeader", "Cf")
                        .WithMany()
                        .HasForeignKey("CfId");
                });
#pragma warning restore 612, 618
        }
    }
}
